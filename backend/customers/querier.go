// Code generated by sqlc. DO NOT EDIT.

package customers

import (
	"context"
	"database/sql"
)

type Querier interface {
	ClearCustomerPaymentMethods(ctx context.Context, customerID string) error
	ConnectedAccountExists(ctx context.Context, accountID string) (bool, error)
	ConnectedCustomerExists(ctx context.Context, arg ConnectedCustomerExistsParams) (bool, error)
	CreateCustomer(ctx context.Context, arg CreateCustomerParams) (Customer, error)
	DeleteCustomer(ctx context.Context, customerID string) error
	GetAccountIDFromUserID(ctx context.Context, id string) (sql.NullString, error)
	GetAllConnectCustomers(ctx context.Context, customerID string) ([]GetAllConnectCustomersRow, error)
	GetConnectedAccount(ctx context.Context, accountID string) (ConnectedAccount, error)
	GetConnectedAccountByUserID(ctx context.Context, userID string) (ConnectedAccount, error)
	GetConnectedCustomerByCustomerID(ctx context.Context, arg GetConnectedCustomerByCustomerIDParams) (ConnectedCustomer, error)
	GetConnectedCustomerByUserID(ctx context.Context, arg GetConnectedCustomerByUserIDParams) (ConnectedCustomer, error)
	GetCustomerByUserID(ctx context.Context, id string) (Customer, error)
	GetCustomerUserID(ctx context.Context, customerID string) (string, error)
	GetDefaultPMByUserID(ctx context.Context, userID string) (StripeDefaultPaymentMethod, error)
	GetPriceByCustomerID(ctx context.Context, customerID string) (StripePrice, error)
	GetPriceByUserID(ctx context.Context, userID string) (StripePrice, error)
	GetRoomSubscriptionForUserID(ctx context.Context, arg GetRoomSubscriptionForUserIDParams) (RoomSubscription, error)
	GetRoomSubscriptionsForUserID(ctx context.Context, userID string) ([]RoomSubscription, error)
	GetSubscription(ctx context.Context, id string) (StripeSubscription, error)
	GetSubscriptionByCustomerID(ctx context.Context, customerID string) (StripeSubscription, error)
	GetSubscriptionByUserID(ctx context.Context, userID string) (StripeSubscription, error)
	GetUserIDsSubscribedToRoom(ctx context.Context, roomID string) ([]string, error)
	HasCustomerUsedTrial(ctx context.Context, customerID string) (sql.NullBool, error)
	SetAccountIDFromUserID(ctx context.Context, arg SetAccountIDFromUserIDParams) (Customer, error)
	StoreConnectedAccount(ctx context.Context, arg StoreConnectedAccountParams) (ConnectedAccount, error)
	StoreConnectedCustomer(ctx context.Context, arg StoreConnectedCustomerParams) (ConnectedCustomer, error)
	StoreDefaultPaymentMethod(ctx context.Context, arg StoreDefaultPaymentMethodParams) (StripeDefaultPaymentMethod, error)
	StorePrice(ctx context.Context, arg StorePriceParams) (StripePrice, error)
	StoreRoomSubscription(ctx context.Context, arg StoreRoomSubscriptionParams) (RoomSubscription, error)
	StoreSubscription(ctx context.Context, arg StoreSubscriptionParams) (StripeSubscription, error)
	UpdateConnectedAccountCanReceivePayments(ctx context.Context, arg UpdateConnectedAccountCanReceivePaymentsParams) (ConnectedAccount, error)
	UpdateSubscriptionStatus(ctx context.Context, arg UpdateSubscriptionStatusParams) (StripeSubscription, error)
	UseTrial(ctx context.Context, customerID string) error
}

var _ Querier = (*Queries)(nil)
